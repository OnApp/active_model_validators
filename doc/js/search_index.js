var search_data = {"index":{"searchIndex":["activemodelvalidators","emailvalidator","immutabilityvalidator","numericarrayvalidator","urlvalidator","validate_each()","validate_each()","validate_each()","validate_each()"],"longSearchIndex":["activemodelvalidators","activemodelvalidators::emailvalidator","activemodelvalidators::immutabilityvalidator","activemodelvalidators::numericarrayvalidator","activemodelvalidators::urlvalidator","activemodelvalidators::emailvalidator#validate_each()","activemodelvalidators::immutabilityvalidator#validate_each()","activemodelvalidators::numericarrayvalidator#validate_each()","activemodelvalidators::urlvalidator#validate_each()"],"info":[["ActiveModelValidators","","ActiveModelValidators.html","",""],["ActiveModelValidators::EmailValidator","","ActiveModelValidators/EmailValidator.html","","<p>Email addresses validator\n"],["ActiveModelValidators::ImmutabilityValidator","","ActiveModelValidators/ImmutabilityValidator.html","","<p>Attributes immutability validator\n"],["ActiveModelValidators::NumericArrayValidator","","ActiveModelValidators/NumericArrayValidator.html","","<p>Validator of numerical array\n"],["ActiveModelValidators::UrlValidator","","ActiveModelValidators/UrlValidator.html","","<p>URL validator\n"],["validate_each","ActiveModelValidators::EmailValidator","ActiveModelValidators/EmailValidator.html#method-i-validate_each","(record, attr, value)","<p><code>record</code> - ActiveRecord model\n<p><code>attr</code>   - model attribute where email address will be stored\n<p><code>value</code>  - entered …\n"],["validate_each","ActiveModelValidators::ImmutabilityValidator","ActiveModelValidators/ImmutabilityValidator.html#method-i-validate_each","(record, attribute, value)","<p>Adds error if there an attempt to change an immutable attribute\n<p><code>record</code> - ActiveRecord model\n<p><code>attr</code>   - model …\n"],["validate_each","ActiveModelValidators::NumericArrayValidator","ActiveModelValidators/NumericArrayValidator.html#method-i-validate_each","(record, attribute, value)","<p>Adds error if there an attribute with not a numerical array provided\n<p><code>record</code> - ActiveRecord model\n<p><code>attr</code>  …\n"],["validate_each","ActiveModelValidators::UrlValidator","ActiveModelValidators/UrlValidator.html#method-i-validate_each","(record, attribute, value)","<p>Adds error if there is invalid URL address.\n<p>By default it works with <code>http</code> and <code>https</code>.\n<p>It can be easily extended …\n"]]}}